{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-video/add-video.component.html","webpack:///./src/app/add-video/add-video.component.scss","webpack:///./src/app/add-video/add-video.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.scss","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/gif-creator/gif-creator.component.html","webpack:///./src/app/gif-creator/gif-creator.component.scss","webpack:///./src/app/gif-creator/gif-creator.component.ts","webpack:///./src/app/meme-creator/meme-creator.component.html","webpack:///./src/app/meme-creator/meme-creator.component.scss","webpack:///./src/app/meme-creator/meme-creator.component.ts","webpack:///./src/app/results/search-results/search-results.component.css","webpack:///./src/app/results/search-results/search-results.component.html","webpack:///./src/app/results/search-results/search-results.component.ts","webpack:///./src/app/results/single-result/single-result.component.css","webpack:///./src/app/results/single-result/single-result.component.html","webpack:///./src/app/results/single-result/single-result.component.ts","webpack:///./src/app/search/advanced-search/advanced-search.component.html","webpack:///./src/app/search/advanced-search/advanced-search.component.scss","webpack:///./src/app/search/advanced-search/advanced-search.component.ts","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.scss","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/search/services/search.service.ts","webpack:///./src/app/shared/search-header/search-header.component.html","webpack:///./src/app/shared/search-header/search-header.component.scss","webpack:///./src/app/shared/search-header/search-header.component.ts","webpack:///./src/app/shared/services/auth-interceptor.service.ts","webpack:///./src/app/shared/services/detail-service.service.ts","webpack:///./src/app/shared/services/picture.service.ts","webpack:///./src/app/shared/services/video.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--\\n<input type=\\\"text\\\" [(ngModel)]=\\\"searchTerm\\\">\\n<button (click)=\\\"search()\\\">Search</button>\\n-->\\n\\n<input type=\\\"text\\\" [(ngModel)]=\\\"videoTag\\\">\\n<button (click)=\\\"addVideo()\\\">Add Video</button> \\n\\n<br>\\n\\n<input type=\\\"text\\\" [(ngModel)]=\\\"processVideoTag\\\">\\n<button (click)=\\\"processVideo()\\\">Process Video</button> \\n\\n<br> \\n\\n<input #gifVideoId type=\\\"text\\\">\\n<button (click)=\\\"createGIF(gifVideoId.value)\\\">Create GIF</button>\\n\\n\\n<div *ngIf=\\\"videoProcessed\\\">\\n  Video was processed and added to database\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from '../search/services/search.service';\n\n@Component({\n  selector: 'app-add-video',\n  templateUrl: './add-video.component.html',\n  styleUrls: ['./add-video.component.scss']\n})\nexport class AddVideoComponent implements OnInit {\n\n  videoTag: string = '';\n  videoProcessed: boolean = false;\n  processVideoTag: string = '';\n\n  constructor(private searchService: SearchService) { }\n\n  ngOnInit() {\n  }\n\n  addVideo() {\n    this.videoProcessed = false;\n    this.searchService.addArchiveVideo(this.videoTag).subscribe(x => {\n      console.log(x);\n      this.videoProcessed = true;\n    })\n  }\n\n  processVideo() {\n    this.searchService.processVideo(this.processVideoTag).subscribe(x => {\n      console.log(x);\n    })\n  }\n\n  createGIF(value) {\n    this.searchService.createGIF(value, '00:01:20:500', '00:01:21:500').subscribe(x => {\n\n    });\n  }\n}\n ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { SearchResultsComponent } from './results/search-results/search-results.component';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { AddVideoComponent } from './add-video/add-video.component';\r\nimport { GifCreatorComponent } from './gif-creator/gif-creator.component';\r\nimport { MemeCreatorComponent } from './meme-creator/meme-creator.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'search',\r\n        pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'search',\r\n        component: SearchComponent\r\n    },\r\n    {\r\n        path: 'search/:type/:term',\r\n        component: SearchComponent\r\n    },\r\n    {\r\n        path: 'search-results',\r\n        component: SearchResultsComponent\r\n    },\r\n    {\r\n        path: 'video-detail/:videoClip/:timeOf/create-meme',\r\n        component: MemeCreatorComponent\r\n    },\r\n    {\r\n        path: 'video-detail/:videoClip/:timeOf/create-gif',\r\n        component: GifCreatorComponent\r\n    },\r\n    {\r\n        path: 'video-detail/:videoClip/:timeOf',\r\n        component: DetailsComponent,\r\n    },\r\n    {\r\n        path: 'add-video',\r\n        component: AddVideoComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"<!-- <app-search-header></app-search-header> -->\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<!-- <img *ngIf=\\\"pictureUrl\\\" class=\\\"post-person-img\\\" [src]=\\\"pictureUrl\\\"> -->\\r\\n\"","module.exports = \"\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {PictureService} from \"./shared/services/picture.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  // encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  pictureUrl;\r\n  constructor(private pictureService: PictureService) {}\r\n\r\n  ngOnInit() {\r\n    // this.pictureService.getImage().subscribe(x => {\r\n    //   // this.pictureUrl = this.pictureService.getPictureFromBuffer(x);\r\n    //   this.pictureUrl = this.createImageFromBlob(x);\r\n\r\n    // })\r\n  }\r\n\r\n    createImageFromBlob(image: Blob) {\r\n      let reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.pictureUrl = 'data:image/jpg;base64,' + reader.result;\r\n        console.log(this.pictureUrl);\r\n      }, false);\r\n\r\n      if (image) {\r\n        reader.readAsText(image);\r\n      }\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { SearchResultsComponent } from './results/search-results/search-results.component';\r\nimport { SingleResultComponent } from './results/single-result/single-result.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthInterceptor } from './shared/services/auth-interceptor.service';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { SearchHeaderComponent } from './shared/search-header/search-header.component';\r\nimport { AddVideoComponent } from './add-video/add-video.component';\r\nimport { NgxImageEditorModule } from \"ngx-image-editor\";\r\nimport { GifCreatorComponent } from './gif-creator/gif-creator.component';\r\nimport { MemeCreatorComponent } from './meme-creator/meme-creator.component';\r\nimport { AdvancedSearchComponent } from './search/advanced-search/advanced-search.component';\r\nimport { MatButtonModule, MatCheckbox, MatCheckboxModule, MatInputModule } from '@angular/material';\r\n\r\n\r\n@NgModule({ \r\n  declarations: [\r\n    AppComponent,\r\n    SearchComponent,\r\n    SearchResultsComponent,\r\n    SingleResultComponent,\r\n    DetailsComponent,\r\n    SearchHeaderComponent,\r\n    AddVideoComponent,\r\n    GifCreatorComponent,\r\n    MemeCreatorComponent,\r\n    AdvancedSearchComponent\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    HttpClientModule,\r\n    NgxImageEditorModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  entryComponents: [\r\n    AdvancedSearchComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"container detail-container\\\">\\n\\n  <div class=\\\"row video-clip-info\\\">\\n    <div id=\\\"main-picture\\\" class=\\\"col-6\\\">\\n      <!-- <img *ngIf=\\\"segments && segments.length > 0 && segments[0].pictureUrl\\\" [src]=\\\"segments[0].pictureUrl\\\" alt=\\\"\\\" (click)=\\\"updateCurrentClip()\\\"> -->\\n\\n      <!-- <ngx-image-editor [config]=\\\"config\\\" (close)=\\\"close($event)\\\" (file)=\\\"getEditedFile($event)\\\">\\n      </ngx-image-editor> -->\\n      <canvas #canvas id=\\\"canvasId\\\" [width]=\\\"width\\\" [height]=\\\"height\\\"></canvas>\\n\\n    </div>\\n\\n    <div class=\\\"clip-text col-6\\\" *ngIf=\\\"videoClip\\\">\\n      {{ videoClip.subtitle_text }} <br>\\n      <!--\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"color\\\" (change)=\\\"addTextToMeme()\\\"> <br>\\n      <input type=\\\"number\\\" [max]='height - fontSize' min='0' [(ngModel)]=\\\"fontSize\\\" (change)=\\\"addTextToMeme()\\\"> <br>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"memeText\\\" (keyup)=\\\"addTextToMeme()\\\"> <br>\\n      <button (click)=\\\"download()\\\">Download</button>\\n      <button (click)=\\\"createAnimation()\\\">Create Animation</button>\\n      <button (click)=\\\"createGIF()\\\">Create GIF</button><br> -->\\n      <!-- <input type=\\\"text\\\" [(ngModel)]=\\\"gifLink\\\"> -->\\n      <!-- <a *ngIf=\\\"gifLink\\\" target=\\\"_blank\\\" [attr.href]=\\\"'./static/gifs/' + gifLink\\\">Link to GIF</a> -->\\n      <!-- <button (click)=\\\"navigateToMemeCreation()\\\">Create Meme</button> -->\\n\\n      <!-- <a [routerLink]=\\\"['./create-gif']\\\"> -->\\n        <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"createGIF()\\\">Create GIF</button>\\n      <!-- </a> -->\\n      <br>\\n      <br>\\n      <!-- <a [routerLink]=\\\"['./create-meme']\\\"> -->\\n        <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"createMeme()\\\">Create Meme</button>\\n      <!-- </a> -->\\n    </div>\\n  </div>\\n\\n  <!-- <div class=\\\"row\\\" style=\\\"overflow-x: scroll;\\\">\\n\\n    <table>\\n      <thead>\\n\\n      </thead>\\n      <tbody style=\\\"overflow-x:auto;\\\">\\n        <td *ngFor=\\\"let segment of segments; let i = index\\\">\\n          <div class=\\\"picture\\\">\\n            <img style=\\\"width: 200px; height: 200px\\\" *ngIf=\\\"segment && segment.pictureUrl\\\" [src]=\\\"segment.pictureUrl\\\"\\n              alt=\\\"\\\" (click)=\\\"updateCurrentClip(i)\\\">\\n          </div>\\n        </td>\\n      </tbody>\\n    </table>\\n\\n\\n  </div> -->\\n  <div class=\\\"row\\\" style=\\\"overflow-x: scroll;\\\">\\n    <!-- {{ minImageIndex }}\\n    {{ maxImageIndex }} -->\\n    <table style=\\\"border-collapse: collapse;\\\">\\n      <thead>\\n      </thead>\\n      <tbody style=\\\"overflow-x:auto;\\\">\\n        <td *ngFor=\\\"let segment of segments; let i = index\\\">\\n          <div class=\\\"gif-picture\\\" [ngClass]=\\\"{'gif-picture-highlighted': i <= maxImageIndex && i >= minImageIndex}\\\">\\n            <img style=\\\"width: 200px; height: 200px\\\" *ngIf=\\\"segment && segment.pictureUrl\\\" [src]=\\\"segment.pictureUrl\\\"\\n              alt=\\\"\\\">\\n            <!-- <img style=\\\"width: 200px; height: 200px\\\" *ngIf=\\\"segment && segment.pictureUrl\\\" [src]=\\\"segment.pictureUrl\\\"\\n              alt=\\\"\\\" (click)=\\\"updateImageIndexes(i)\\\"> -->\\n          </div>\\n        </td>\\n      </tbody>\\n    </table>\\n\\n\\n  </div>\\n</div>\"","module.exports = \".detail-container{max-width:1600px;width:1600px}.detail-container .video-clip-info{margin-top:40px}.detail-container .video-clip-info .clip-text{margin:auto 0}.detail-container canvas{max-width:650px}.detail-container #main-picture{margin-bottom:40px}.detail-container #main-picture image{width:475px;height:475px}.detail-container .gif-picture{padding:10px 5px;margin-right:-2px}.detail-container .gif-picture-highlighted{background-color:maroon}.detail-container .picture{width:200px;margin:0 8px}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DetailService } from '../shared/services/detail-service.service';\nimport { VideoClip } from '../search/models/video-clip';\nimport { PictureService } from '../shared/services/picture.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VideoService } from '../shared/services/video.service';\nimport { SearchService } from '../search/services/search.service';\n\nexport interface Segment {\n  videoId: number;\n  minutes: number;\n  seconds: number;\n  pictureUrl: string;\n}\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent implements OnInit {\n\n  @ViewChild('canvas') canvas;\n\n  timeOf: number;\n  videoClip: VideoClip;\n  segments: Segment[] = [];\n  memeText: string = '';\n  height: string = '';\n  width: string = '';\n  fontSize: number = 26;\n  textHeight: number = 0;\n  color: string = 'white'\n  videoSegmentId: number = 0;\n  minImageIndex: number = -1;\n  maxImageIndex: number = -1;\n  gifLink: string = '';\n\n  segment: Segment = { videoId: 2, minutes: 1, seconds: 9, pictureUrl: '' };\n\n  constructor(public detailService: DetailService,\n    public pictureService: PictureService,\n    public activatedRoute: ActivatedRoute,\n    public videoService: VideoService,\n    private searchService: SearchService,\n    private router: Router) {\n    this.videoClip = detailService.getVideoClip();\n  }\n\n  ngOnInit() {\n    this.timeOf = +this.activatedRoute.snapshot.params['timeOf'];\n    if (this.videoClip) {\n      this.getVideoSegments();\n    } else {\n      let videoClipId = this.activatedRoute.snapshot.params['videoClip'];\n      this.videoService.getVideoClip(videoClipId).subscribe(x => {\n        this.videoClip = x;\n        this.getVideoSegments();\n        // console.log(x);\n      })\n    }\n  }\n\n  createGIF() {\n    this.videoService.videoSegments = this.segments;\n    this.router.navigate(['./create-gif'], { relativeTo: this.activatedRoute });\n    this.detailService.setVideoClip(this.videoClip)\n  }\n\n  createMeme() {\n    this.router.navigate(['./create-meme'], { relativeTo: this.activatedRoute });\n  }\n\n  updateImageIndexes(i) {\n    if (this.minImageIndex == -1) {\n      this.minImageIndex = i;\n      this.maxImageIndex = i;\n    } else if (i > this.minImageIndex) {\n      this.maxImageIndex = i;\n    } else if (i < this.minImageIndex) {\n      this.minImageIndex = i;\n      this.maxImageIndex = i;\n    } else if (i == this.minImageIndex) {\n      this.minImageIndex = -1;\n      this.maxImageIndex = -1;\n    }\n  }\n\n  updateCurrentClip(id) {\n    this.videoSegmentId = id;\n    this.addTextToMeme();\n  }\n\n  navigateToMemeCreation() {\n    this.router.navigate(['create-meme' + this.videoClip.video]);\n  }\n\n  close(event) {\n\n  }\n\n  getEditedFile(event) {\n\n  }\n\n  getVideoSegments() {\n    if (this.videoClip.start_minutes == this.videoClip.end_minutes) {\n      let secondDiff = (this.videoClip.end_seconds - this.videoClip.start_seconds);\n      for (let i = +this.videoClip.start_seconds; i < +this.videoClip.end_seconds; i += .2) {\n        let vC = Object.assign({}, this.videoClip);\n        let segment = { videoId: vC.video, minutes: vC.start_minutes, seconds: i, pictureUrl: '' };\n        this.segments.push(segment);\n      }\n\n      for (let i = 0; i < this.segments.length; i++) {\n\n        this.getImage(this.segments[i], i);\n      }\n    }\n  }\n\n  private getImage(segment: Segment, index) {\n    this.pictureService.getImage(segment.videoId, segment.minutes, segment.seconds + '').subscribe(x => {\n      // this.pictureUrl = this.pictureService.getPictureFromBuffer(x);\n      this.createImageFromBlob(x, segment, index);\n      let time = segment.minutes * 60 + segment.seconds;\n      let time1 = +time.toFixed(2)\n      let time2 = +this.timeOf.toFixed(2)\n      if (time1 - time2 == 0) {\n        // this.videoSegmentId = index;\n        // this.addTextToMeme();\n        // setTimeout(() => {\n        //   this.addTextToMeme();\n        // })\n      }\n    })\n  }\n\n  createAnimation() {\n    setTimeout(() => {\n      if (this.videoSegmentId == this.segments.length - 1) {\n        this.videoSegmentId = 0;\n      } else {\n        this.videoSegmentId++;\n      }\n      this.createAnimation();\n      this.addTextToMeme();\n    }, 100);\n  }\n\n  addTextToMeme() {\n    let canvas: any = document.getElementById('canvasId');\n    let context = canvas.getContext('2d');\n\n    let imageObj = new Image();\n\n    imageObj.onload = function () {\n      this.width = imageObj.width;\n      this.height = imageObj.height;\n      context.drawImage(imageObj, 0, 0, this.width, this.height,\n        0, 0, this.width, this.height);\n      context.font = this.fontSize + \"px Calibri\";\n      context.fillStyle = this.color;\n      this.textHeight = this.height - this.fontSize;\n      let lines = this.getLines(context, this.memeText, this.width - 100);\n      for (let i = 0; i < lines.length; i++) {\n        context.fillText(lines[i], 50, this.height - ((lines.length - i) * (this.fontSize * 1.2)))\n      }\n      let canvas: any = document.getElementById('canvasId');\n      let dataURL = canvas.toDataURL();\n    }.bind(this);\n\n    imageObj.setAttribute('crossOrigin', 'anonymous');\n    imageObj.src = this.segments[this.videoSegmentId].pictureUrl;\n  }\n\n  getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n      var word = words[i];\n      var width = ctx.measureText(currentLine + \" \" + word).width;\n      if (width < maxWidth) {\n        currentLine += \" \" + word;\n      } else {\n        lines.push(currentLine);\n        currentLine = word;\n      }\n    }\n    lines.push(currentLine);\n    return lines;\n  }\n\n\n  download() {\n    let link: any = document.createElement('a');\n    link.download = 'filename.png';\n    let element: any = document.getElementById('canvasId');\n    link.href = element.toDataURL()\n    link.click();\n  }\n\n  createImageFromBlob(image: Blob, segment: Segment, index: number) {\n    if (image.size) {\n      let reader = new FileReader();\n      reader.addEventListener(\"load\", () => { \n\n        segment.pictureUrl = 'data:image/jpg;base64,' + reader.result;\n\n        let time = segment.minutes * 60 + segment.seconds;\n        let time1 = +time.toFixed(4)\n        let time2 = +this.timeOf.toFixed(4)\n        if (time1 - time2 == 0) {\n          // if (index == 0) {\n          this.videoSegmentId = index;\n          this.addTextToMeme();\n          setTimeout(() => {\n            this.addTextToMeme();\n          })\n        }\n      }, false);\n      if (image) {\n        reader.readAsText(image); \n      }\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container detail-container\\\">\\n  <div class=\\\"row video-clip-info\\\">\\n    <div id=\\\"main-picture\\\" class=\\\"col-6\\\">\\n      <canvas #canvas id=\\\"canvasId\\\" [width]=\\\"width\\\" [height]=\\\"height\\\"></canvas>\\n    </div>\\n    <div class=\\\"clip-text col-6\\\" *ngIf=\\\"videoClip\\\">\\n      {{ videoClip.subtitle_text }} <br>\\n      <!-- <input type=\\\"text\\\" placeholder=\\\"Text to overlay on GIF\\\" [(ngModel)]=\\\"gifTextOverlay\\\"> <br> -->\\n      <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"createAnimation()\\\">Show GIF when created</button> <br><br>\\n      <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"createGIF()\\\">Create GIF</button><br>\\n      <a *ngIf=\\\"gifLink\\\" target=\\\"_blank\\\" [attr.href]=\\\"'./static/gifs/' + gifLink\\\">Link to GIF</a>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" style=\\\"overflow-x: scroll;\\\">\\n    <table style=\\\"border-collapse: collapse;\\\">\\n      <thead>\\n      </thead>\\n      <tbody style=\\\"overflow-x:auto;\\\">\\n        <td *ngFor=\\\"let segment of segments; let i = index\\\">\\n          <div class=\\\"gif-picture\\\" [ngClass]=\\\"{'gif-picture-highlighted': i <= maxImageIndex && i >= minImageIndex}\\\">\\n            <img style=\\\"width: 200px; height: 200px\\\" *ngIf=\\\"segment && segment.pictureUrl\\\" [src]=\\\"segment.pictureUrl\\\"\\n              alt=\\\"\\\" (click)=\\\"updateImageIndexes(i)\\\">\\n          </div>\\n        </td>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n\\n<!-- enable oauth authicationn with google or facebook -->\\n<!-- make the appealing -->\\n<!-- share option to facebook or instagram -->\\ncreate mobile app for\\nfreemium tiered break into the market share 2 apps now there are 3\\nreach out to Rob Tuft\\ndo market research before inveesting a ton of time into a project\\nRun two apps at the same time\\nMake the app more ux appealing\\nreach out to josh holladay on linkedin for designer work\\nIf I'm creating a straight mimick do it well try some redesign\\n\"","module.exports = \".detail-container{max-width:1600px;width:1600px}.detail-container .video-clip-info{margin-top:40px}.detail-container .video-clip-info .clip-text{margin:auto 0}.detail-container canvas{max-width:650px}.detail-container #main-picture{margin-bottom:40px}.detail-container #main-picture image{width:475px;height:475px}.detail-container .gif-picture{padding:10px 5px;margin-right:-2px}.detail-container .gif-picture-highlighted{background-color:maroon}.detail-container .picture{width:200px;margin:0 8px}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DetailService } from '../shared/services/detail-service.service';\nimport { VideoClip } from '../search/models/video-clip';\nimport { PictureService } from '../shared/services/picture.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VideoService } from '../shared/services/video.service';\nimport { SearchService } from '../search/services/search.service';\n\nexport interface Segment {\n  videoId: number;\n  minutes: number;\n  seconds: number;\n  pictureUrl: string;\n}\n\n@Component({\n  selector: 'app-gif-creator',\n  templateUrl: './gif-creator.component.html',\n  styleUrls: ['./gif-creator.component.scss']\n})\nexport class GifCreatorComponent implements OnInit {\n\n  @ViewChild('canvas') canvas;\n\n  videoClip: VideoClip;\n  segments: Segment[] = [];\n  memeText: string = '';\n  height: string = '';\n  width: string = '';\n  fontSize: number = 26;\n  textHeight: number = 0;\n  color: string = 'white'\n  videoSegmentId: number = 0;\n  minImageIndex: number = -1;\n  maxImageIndex: number = 0;\n  gifLink: string = '';\n  gifTextOverlay: string = '';\n  numLapse: number = 150;\n\n  segment: Segment = { videoId: 2, minutes: 1, seconds: 9, pictureUrl: '' };\n\n  constructor(public detailService: DetailService,\n    public pictureService: PictureService,\n    public activatedRoute: ActivatedRoute,\n    public videoService: VideoService,\n    private searchService: SearchService,\n    private router: Router) {\n    this.videoClip = detailService.getVideoClip();\n  }\n\n  ngOnInit() {\n    if (!this.videoService.videoSegments) {\n      if (this.videoClip) {\n        this.getVideoSegments();\n      } else {\n        let videoClipId = this.activatedRoute.snapshot.params['videoClip'];\n        this.videoService.getVideoClip(videoClipId).subscribe(x => {\n          this.videoClip = x;\n          this.getVideoSegments();\n          // console.log(x);\n        })\n      }\n    } else {\n      this.segments = this.videoService.videoSegments;\n      setTimeout(() => {\n        this.addTextToMeme();\n        this.addTextToMeme();\n      }, 500)\n    }\n\n  }\n\n  createGIF() {\n    let minSegment = this.segments[this.minImageIndex];\n    let maxSegment = this.segments[this.maxImageIndex];\n    console.log(minSegment);\n    console.log(maxSegment);\n\n    let startTime = '00:' + minSegment.minutes + ':' + (minSegment.seconds.toString().indexOf('.') != -1 ? minSegment.seconds.toString().replace('.', ':') : minSegment.seconds + ':00');\n    let endTime = '00:' + maxSegment.minutes + ':' + (maxSegment.seconds.toString().indexOf('.') != -1 ? maxSegment.seconds.toString().replace('.', ':') : maxSegment.seconds + ':00');\n    this.searchService.createGIF(this.videoClip.video, startTime, endTime, this.gifTextOverlay).subscribe(x => {\n      this.gifLink = x.gif_name;\n    })\n  }\n\n  updateImageIndexes(i) {\n    if (this.minImageIndex == -1) {\n      this.minImageIndex = i;\n      this.maxImageIndex = i;\n    } else if (i > this.minImageIndex) {\n      this.maxImageIndex = i;\n    } else if (i < this.minImageIndex) {\n      this.minImageIndex = i;\n      this.maxImageIndex = i;\n    } else if (i == this.minImageIndex) {\n      this.minImageIndex = -1;\n      this.maxImageIndex = -1;\n    }\n  }\n\n  updateCurrentClip(id) {\n    this.videoSegmentId = id;\n    this.addTextToMeme();\n  }\n\n  navigateToMemeCreation() {\n    this.router.navigate(['create-meme' + this.videoClip.video]);\n  }\n\n  close(event) {\n\n  }\n\n  getEditedFile(event) {\n\n  }\n\n  getVideoSegments() {\n    this.segments = [];\n    if (this.videoClip.start_minutes == this.videoClip.end_minutes) {\n      let secondDiff = (this.videoClip.end_seconds - this.videoClip.start_seconds);\n      let amountToSkip = this.numLapse / 1000\n      for (let i = +this.videoClip.start_seconds; i < +this.videoClip.end_seconds; i += amountToSkip) {\n        let vC = Object.assign({}, this.videoClip);\n        let segment = { videoId: vC.video, minutes: vC.start_minutes, seconds: i, pictureUrl: '' };\n        this.segments.push(segment);\n      }\n\n      for (let i = 0; i < this.segments.length; i++) {\n        setTimeout(() => {\n          this.getImage(this.segments[i], i);\n        }, i * 100);\n      }\n    }\n  }\n\n  private getImage(segment: Segment, index) {\n    this.pictureService.getImage(segment.videoId, segment.minutes, segment.seconds + '').subscribe(x => {\n      this.createImageFromBlob(x, segment, index);\n    })\n  }\n\n  createAnimation() {\n    setTimeout(() => {\n      if (this.minImageIndex != -1 && this.maxImageIndex != -1 && this.videoSegmentId >= this.maxImageIndex) {\n        this.videoSegmentId = this.minImageIndex;\n      } else if (this.videoSegmentId == this.segments.length - 1) {\n        this.videoSegmentId = 0;\n      } else {\n        this.videoSegmentId++;\n      }\n      this.createAnimation();\n      this.addTextToMeme();\n    }, this.numLapse);\n  }\n\n  addTextToMeme() {\n    let canvas: any = document.getElementById('canvasId');\n    let context = canvas.getContext('2d');\n\n    let imageObj = new Image();\n\n    imageObj.onload = function () {\n      this.width = imageObj.width;\n      this.height = imageObj.height;\n      context.drawImage(imageObj, 0, 0, this.width, this.height,\n        0, 0, this.width, this.height);\n      context.font = this.fontSize + \"px Calibri\";\n      context.fillStyle = this.color;\n      this.textHeight = this.height - this.fontSize;\n      let lines = this.getLines(context, this.memeText, this.width - 100);\n      for (let i = 0; i < lines.length; i++) {\n        context.fillText(lines[i], 50, this.height - ((lines.length - i) * (this.fontSize * 1.2)))\n      }\n      let canvas: any = document.getElementById('canvasId');\n      let dataURL = canvas.toDataURL();\n    }.bind(this);\n\n    imageObj.setAttribute('crossOrigin', 'anonymous');\n    imageObj.src = this.segments[this.videoSegmentId].pictureUrl;\n  }\n\n  getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n      var word = words[i];\n      var width = ctx.measureText(currentLine + \" \" + word).width;\n      if (width < maxWidth) {\n        currentLine += \" \" + word;\n      } else {\n        lines.push(currentLine);\n        currentLine = word;\n      }\n    }\n    lines.push(currentLine);\n    return lines;\n  }\n\n  download() {\n    let link: any = document.createElement('a');\n    link.download = 'filename.png';\n    let element: any = document.getElementById('canvasId');\n    link.href = element.toDataURL()\n    link.click();\n  }\n\n  createImageFromBlob(image: Blob, segment: Segment, index: number) {\n    if (image.size) {\n      let reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n\n        segment.pictureUrl = 'data:image/jpg;base64,' + reader.result;\n\n        if (index == 0) {\n          this.addTextToMeme();\n          setTimeout(() => {\n            this.addTextToMeme();\n          })\n        }\n      }, false);\n      if (image) {\n        reader.readAsText(image);\n      }\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container detail-container\\\">\\n\\n  <div class=\\\"row video-clip-info\\\">\\n    <div id=\\\"main-picture\\\" class=\\\"col-6\\\">\\n      <canvas #canvas id=\\\"canvasId\\\" [width]=\\\"width\\\" [height]=\\\"height\\\"></canvas>\\n    </div>\\n\\n    <div class=\\\"clip-text col-6\\\" *ngIf=\\\"videoClip\\\">\\n      {{ videoClip.subtitle_text }} <br>\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Text Color\\\" type=\\\"text\\\" [(ngModel)]=\\\"color\\\" (keyup)=\\\"addTextToMeme()\\\">\\n      </mat-form-field> <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Font Size\\\" type=\\\"number\\\" [max]='height - fontSize' min='0' [(ngModel)]=\\\"fontSize\\\" (change)=\\\"addTextToMeme()\\\">\\n      </mat-form-field> <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Meme Text\\\" type=\\\"text\\\" [(ngModel)]=\\\"memeText\\\" (keyup)=\\\"addTextToMeme()\\\">\\n      </mat-form-field> <br>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"download()\\\">Download</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" style=\\\"overflow-x: scroll;\\\">\\n\\n    <table>\\n      <thead>\\n      </thead>\\n      <tbody style=\\\"overflow-x:auto;\\\">\\n        <td *ngFor=\\\"let segment of segments; let i = index\\\">\\n          <div class=\\\"picture\\\">\\n            <img style=\\\"width: 200px; height: 200px\\\" *ngIf=\\\"segment && segment.pictureUrl\\\" [src]=\\\"segment.pictureUrl\\\"\\n              alt=\\\"\\\" (click)=\\\"updateCurrentClip(i)\\\">\\n          </div>\\n        </td>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"","module.exports = \".detail-container{max-width:1600px;width:1600px}.detail-container .video-clip-info{margin-top:40px}.detail-container .video-clip-info .clip-text{margin:auto 0}.detail-container canvas{max-width:650px}.detail-container #main-picture{margin-bottom:40px}.detail-container #main-picture image{width:475px;height:475px}.detail-container .gif-picture{padding:10px 5px;margin-right:-2px}.detail-container .gif-picture-highlighted{background-color:maroon}.detail-container .picture{width:200px;margin:0 8px}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DetailService } from '../shared/services/detail-service.service';\nimport { VideoClip } from '../search/models/video-clip';\nimport { PictureService } from '../shared/services/picture.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VideoService } from '../shared/services/video.service';\nimport { SearchService } from '../search/services/search.service';\n\nexport interface Segment {\n  videoId: number;\n  minutes: number;\n  seconds: number;\n  pictureUrl: string;\n}\n\n@Component({\n  selector: 'app-meme-creator',\n  templateUrl: './meme-creator.component.html',\n  styleUrls: ['./meme-creator.component.scss']\n})\nexport class MemeCreatorComponent implements OnInit {\n\n  @ViewChild('canvas') canvas;\n\n  videoClip: VideoClip;\n  segments: Segment[] = [];\n  memeText: string = '';\n  height: string = '';\n  width: string = '';\n  fontSize: number = 26;\n  textHeight: number = 0;\n  color: string = 'white'\n  videoSegmentId: number = 0;\n\n  constructor(public detailService: DetailService,\n    public pictureService: PictureService,\n    public activatedRoute: ActivatedRoute,\n    public videoService: VideoService,\n    private searchService: SearchService,\n    private router: Router) {\n    this.videoClip = detailService.getVideoClip();\n  }\n\n  ngOnInit() {\n    if (this.videoClip) {\n      this.getVideoSegments();\n    } else {\n      let videoClipId = this.activatedRoute.snapshot.params['videoClip'];\n      this.videoService.getVideoClip(videoClipId).subscribe(x => {\n        this.videoClip = x;\n        this.getVideoSegments();\n      })\n    }\n  }\n\n  updateCurrentClip(id) {\n    this.videoSegmentId = id;\n    this.addTextToMeme();\n  }\n\n  close(event) {\n\n  }\n\n  getEditedFile(event) {\n\n  }\n\n  getVideoSegments() {\n    if (this.videoClip.start_minutes == this.videoClip.end_minutes) {\n      let secondDiff = (this.videoClip.end_seconds - this.videoClip.start_seconds);\n      for (let i = +this.videoClip.start_seconds; i < +this.videoClip.end_seconds; i += .2) {\n        let vC = Object.assign({}, this.videoClip);\n        let segment = { videoId: vC.video, minutes: vC.start_minutes, seconds: i, pictureUrl: '' };\n        this.segments.push(segment);\n      }\n\n      for (let i = 0; i < this.segments.length; i++) {\n\n        this.getImage(this.segments[i], i);\n      }\n    }\n  }\n\n  private getImage(segment: Segment, index) {\n    this.pictureService.getImage(segment.videoId, segment.minutes, segment.seconds + '').subscribe(x => {\n      this.createImageFromBlob(x, segment, index);\n    })\n  }\n\n  draw(ctx, canvas, texts) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    for (var i = 0; i < texts.length; i++) {\n      var text = texts[i];\n      ctx.fillText(text.text, text.x, text.y);\n    }\n  }\n\n  textHittest(x, y, textIndex, texts) {\n    var text = texts[textIndex];\n    return (x >= text.x &&\n      x <= text.x + text.width &&\n      y >= text.y - text.height &&\n      y <= text.y);\n  }\n\n  handleMouseDown(e: any, startX: any, startY: any, offsetX: any, offsetY: any, selectedText: any, texts: any) {\n    e.preventDefault();\n    startX = parseInt(`${e.clientX - offsetX}`);\n    startY = parseInt(`${e.clientY - offsetY}`);\n\n    // Put your mousedown stuff here\n    for (var i = 0; i < texts.length; i++) {\n      if (this.textHittest(startX, startY, i, texts)) {\n        selectedText = i;\n      }\n    }\n  }\n\n  handleMouseUp(e, selectedText) {\n    e.preventDefault();\n    selectedText = -1;\n  }\n\n  handleMouseOut(e, selectedText) {\n    e.preventDefault();\n    selectedText = -1;\n  }\n\n  handleMouseMove(e, selectedText, mouseX, mouseY, offsetX, offsetY, startX, startY, texts, ctx, canvas) {\n    if (selectedText < 0) { return; }\n    e.preventDefault();\n    mouseX = parseInt(`${e.clientX - offsetX}`);\n    mouseY = parseInt(`${e.clientY - offsetY}`);\n\n    // Put your mousemove stuff here\n    var dx = mouseX - startX;\n    var dy = mouseY - startY;\n    startX = mouseX;\n    startY = mouseY;\n\n    var text = texts[selectedText];\n    text.x += dx;\n    text.y += dy;\n    this.draw(ctx, canvas, texts);\n  }\n\n  addTextToMeme() {\n    let canvas: any = document.getElementById('canvasId');\n    let context = canvas.getContext('2d');\n\n    let imageObj = new Image();\n\n\n\n\n\n    // var canvasOffset = canvas.offset();\n    // var offsetX = canvasOffset.left;\n    // var offsetY = canvasOffset.top;\n    // var scrollX = canvas.scrollLeft();\n    // var scrollY = canvas.scrollTop();\n\n    // var startX;\n    // var startY;\n\n    // // some text objects\n    // var texts = [];\n\n    // // some test texts\n    // texts.push({ text: \"Hello\", x: 20, y: 20 });\n    // texts.push({ text: \"World\", x: 20, y: 70 });\n\n    // context.font = \"16px verdana\";\n    // for (var i = 0; i < texts.length; i++) {\n    //   var text = texts[i];\n    //   text.width = context.measureText(text.text).width;\n    //   text.height = 16;\n    // }\n\n    // var selectedText = -1;\n\n    // // START: draw all texts to the canvas\n    // this.draw(context, canvas, texts);\n\n\n\n\n    // canvas.mousedown(function(e){this.handleMouseDown(e);});\n    // canvas.mousemove(function(e){this.handleMouseMove(e);});\n    // canvas.mouseup(function(e){this.handleMouseUp(e);});\n    // canvas.mouseout(function(e){this.handleMouseOut(e);});\n\n\n\n\n    imageObj.onload = function () {\n      this.width = imageObj.width;\n      this.height = imageObj.height;\n      context.drawImage(imageObj, 0, 0, this.width, this.height,\n        0, 0, this.width, this.height);\n      context.font = this.fontSize + \"px Calibri\";\n      context.fillStyle = this.color;\n      // context.textAlign = 'center';\n      this.textHeight = this.height - this.fontSize;\n      let lines = this.getLines(context, this.memeText, this.width - 100);\n      for (let i = 0; i < lines.length; i++) {\n        context.fillText(lines[i], 50, this.height - ((lines.length - i) * (this.fontSize * 1.2)))\n      }\n      let canvas: any = document.getElementById('canvasId');\n      let dataURL = canvas.toDataURL();\n    }.bind(this);\n\n    imageObj.setAttribute('crossOrigin', 'anonymous');\n    imageObj.src = this.segments[this.videoSegmentId].pictureUrl;\n  }\n\n  getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n      var word = words[i];\n      var width = ctx.measureText(currentLine + \" \" + word).width;\n      if (width < maxWidth) {\n        currentLine += \" \" + word;\n      } else {\n        lines.push(currentLine);\n        currentLine = word;\n      }\n    }\n    lines.push(currentLine);\n    return lines;\n  }\n\n\n  download() {\n    let link: any = document.createElement('a');\n    link.download = 'filename.png';\n    let element: any = document.getElementById('canvasId');\n    link.href = element.toDataURL()\n    link.click();\n  }\n\n  createImageFromBlob(image: Blob, segment: Segment, index: number) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n\n      segment.pictureUrl = 'data:image/jpg;base64,' + reader.result;\n\n      if (index == 0) {\n        this.addTextToMeme();\n        setTimeout(() => {\n          this.addTextToMeme();\n        })\n      }\n    }, false);\n    if (image) {\n      reader.readAsText(image);\n    }\n  }\n}\n","module.exports = \".col-4 {\\r\\n    margin-bottom: 20px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\" *ngFor=\\\"let videoClip of videoClips\\\">\\n      <app-single-result [videoClip]=\\\"videoClip\\\"></app-single-result>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { VideoClip } from 'src/app/search/models/video-clip';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class SearchResultsComponent implements OnInit {\n\n  @Input() videoClips: VideoClip[]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img {\\r\\n    cursor: pointer;\\r\\n    max-height: 240px;\\r\\n    max-width: 100%;\\r\\n}\"","module.exports = \"<div>\\r\\n    <img *ngIf=\\\"videoClip && videoClip.pictureUrl\\\" [src]=\\\"videoClip.pictureUrl\\\" alt=\\\"\\\"\\r\\n        [routerLink]=\\\"['../../../video-detail', videoClip.id, videoClip.time_of]\\\" (click)=\\\"updateCurrentClip()\\\">\\r\\n    {{ videoClip.items_found }}\\r\\n</div>\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { VideoClip } from 'src/app/search/models/video-clip';\nimport { DetailService as DetailService } from 'src/app/shared/services/detail-service.service';\n\n@Component({\n  selector: 'app-single-result',\n  templateUrl: './single-result.component.html',\n  styleUrls: ['./single-result.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class SingleResultComponent implements OnInit {\n\n  @Input() videoClip: VideoClip\n\n  constructor(public detailService: DetailService) { }\n\n  ngOnInit() {\n    console.log(this.videoClip.pictureUrl)\n  }\n\n  updateCurrentClip() {\n    this.detailService.setVideoClip(this.videoClip);\n  }\n\n}\n","module.exports = \"\\n<mat-checkbox [(ngModel)]=\\\"advancedSearchInfo.byObject\\\"></mat-checkbox> Search By Object <br> <br>\\n<mat-checkbox [(ngModel)]=\\\"advancedSearchInfo.byActor\\\"></mat-checkbox> Search By Actor\\n\\n<br>\\n<button mat-raised-button (click)=\\\"done()\\\" color=\\\"primary\\\">Done</button>\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport class AdvancedSearchInfo {\n  byObject: boolean\n  byActor: boolean\n}\n\n@Component({\n  selector: 'app-advanced-search',\n  templateUrl: './advanced-search.component.html',\n  styleUrls: ['./advanced-search.component.scss']\n})\nexport class AdvancedSearchComponent implements OnInit {\n\n  advancedSearchInfo: AdvancedSearchInfo = new AdvancedSearchInfo();\n\n  constructor(public dialogRef: MatDialogRef<AdvancedSearchComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.advancedSearchInfo = this.data.advancedSearchInfo;\n    \n  }\n\n  done() {\n    this.dialogRef.close(this.advancedSearchInfo)\n  }\n}\n","module.exports = \"<div class=\\\"search-container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"search-box\\\">\\r\\n      <input [hidden]=\\\"searchType == 'Emotion'\\\" #searchBox id=\\\"search-box\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchTerm\\\" style=\\\"display: inline-flex;\\\">\\r\\n      <select [hidden]=\\\"searchType != 'Emotion'\\\" name=\\\"\\\" id=\\\"\\\" [(ngModel)]=\\\"emotion\\\" (change)=\\\"search()\\\">\\r\\n        <option value=\\\"angry\\\">Anger</option>\\r\\n        <option value=\\\"disgust\\\">Disgust</option>\\r\\n        <option value=\\\"fear\\\">Fear</option>\\r\\n        <option value=\\\"happy\\\">Happy</option>\\r\\n        <option value=\\\"sad\\\">Sad</option>\\r\\n        <option value=\\\"surprise\\\">Surprise</option>\\r\\n        <option value=\\\"neutral\\\">Neutral</option>\\r\\n      </select>\\r\\n      <select name=\\\"\\\" id=\\\"\\\" [(ngModel)]=\\\"searchType\\\" (change)=\\\"search()\\\">\\r\\n        <option value=\\\"Subtitle\\\">Subtitle</option>\\r\\n        <option value=\\\"Person\\\">Person</option>\\r\\n        <option value=\\\"Object\\\">Object</option>\\r\\n        <option value=\\\"Emotion\\\">Emotion</option>\\r\\n      </select>\\r\\n      <!-- <span style=\\\"color: white; cursor: pointer;\\\" (click)=\\\"showAdvancedSearch()\\\">\\r\\n        Advanced Search\\r\\n      </span>  -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"search-results\\\" *ngIf=\\\"videoClips\\\">\\r\\n  <app-search-results [videoClips]=\\\"videoClips\\\">\\r\\n  </app-search-results>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"search-body\\\" *ngIf=\\\"!videoClips\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\" id=\\\"search-text\\\" style=\\\"color: white; \\\">\\r\\n      Search From Millions of online videos\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- <div>\\r\\n  <div>\\r\\n    <ol *ngFor='let videoClip of videoClips'> \\r\\n      <li>{{ videoClip.start_minutes }}</li>\\r\\n      <li>{{ videoClip.start_seconds }}</li>\\r\\n      <li>{{ videoClip.end_minutes }}</li>\\r\\n      <li>{{ videoClip.end_seconds }}</li>\\r\\n      <li>{{ videoClip.subtitle_text }}</li>\\r\\n      <li>\\r\\n          <img *ngIf=\\\"videoClip.pictureUrl\\\" class=\\\"post-person-img\\\" style=\\\"height: 70px; width: 70px;\\\" [src]=\\\"videoClip.pictureUrl\\\">\\r\\n        {{ videoClip.pictureUrl }}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n<!--\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"searchTerm\\\">\\r\\n<button (click)=\\\"search()\\\">Search</button>\\r\\n-->\\r\\n<!-- <button (click)=\\\"processVideo()\\\">Process Video</button>  -->\"","module.exports = \".search-container{width:100%}.search-container .row{display:-webkit-box;display:flex;margin-left:0;margin-right:0;padding:20px 0;background:black}.search-container .search-box{margin:0 auto;padding-left:10px}.search-container .search-box input{display:-webkit-box}.search-container #search-box{width:800px;max-width:800px;margin:0 auto;border-radius:20px}.search-results{margin-top:40px}.search-body{background:#282828;width:100%;max-width:100%;height:calc(100vh - 88px)}.search-body #search-text{text-align:center;font-size:24px;padding-top:50px}\\n\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { SearchService } from './services/search.service';\r\nimport { VideoClip } from './models/video-clip';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { PictureService } from '../shared/services/picture.service';\r\nimport { MatDialog } from '@angular/material'\r\nimport { AdvancedSearchComponent, AdvancedSearchInfo } from './advanced-search/advanced-search.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('searchBox') searchInput\r\n\r\n  advancedSearchInfo: AdvancedSearchInfo = new AdvancedSearchInfo();\r\n  searchTerm: string;\r\n  videoClips: VideoClip[];\r\n  searchType: string;\r\n  emotion: string;\r\n\r\n  constructor(\r\n    private searchService: SearchService,\r\n    private pictureService: PictureService,\r\n    private matDialog: MatDialog,\r\n    private router: Router,\r\n    private activated: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.searchTerm = this.activated.snapshot.params['term'];\r\n    this.searchType = this.activated.snapshot.params['type'];\r\n    if (this.searchTerm && this.searchType) {\r\n      this.search();\r\n    }\r\n\r\n    this.activated.params.subscribe(params => {\r\n      if (this.searchTerm != params['term'] || this.searchType != params['type'] || this.emotion != params['term']) {\r\n        this.searchType = params['type'];\r\n        if (this.searchType != 'Emotion')\r\n          this.searchTerm = params['term'];\r\n        else\r\n          this.emotion = params['term'] \r\n        this.search();\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      let source = fromEvent(this.searchInput.nativeElement, 'keyup');\r\n      source.pipe(debounceTime(700)).subscribe(c => {\r\n        console.log(c);\r\n        if (this.searchTerm)\r\n          this.router.navigate(['./search', this.searchType, this.searchTerm])\r\n      }\r\n      );\r\n    }, 1000)\r\n  }\r\n\r\n  private getImage(videoClip: VideoClip) {\r\n    this.pictureService.getImage(videoClip.video, videoClip.start_minutes, videoClip.time_of % 60 + '').subscribe(x => {\r\n      this.createImageFromBlob(x, videoClip);\r\n\r\n    })\r\n  }\r\n \r\n  createImageFromBlob(image: Blob, videoClip: VideoClip) {\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      videoClip.pictureUrl = 'data:image/jpg;base64,' + reader.result;\r\n      console.log(videoClip.pictureUrl);\r\n    }, false);\r\n\r\n    if (image) {\r\n      reader.readAsText(image);\r\n    }\r\n  }\r\n\r\n  showAdvancedSearch() {\r\n    const dialogRef = this.matDialog.open(AdvancedSearchComponent, {\r\n      width: '500px',\r\n      height: '300px',\r\n      data: { advancedSearchInfo: this.advancedSearchInfo },\r\n      disableClose: true\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n      if (result)\r\n        this.advancedSearchInfo = result;\r\n    })\r\n  }\r\n\r\n  search() {\r\n    if (this.searchType == \"Subtitle\" && this.searchTerm) {\r\n      this.searchService.searchVideoClips(this.searchTerm).subscribe(clips => {\r\n        this.getImages(clips);\r\n      })\r\n    } else if (this.searchType == \"Person\" && this.searchTerm) {\r\n      this.searchService.searchByPerson(this.searchTerm).subscribe(clips => {\r\n        this.getImages(clips)\r\n      })\r\n    } else if (this.searchType == \"Object\" && this.searchTerm) {\r\n      this.searchService.searchByObject(this.searchTerm).subscribe(clips => {\r\n        this.getImages(clips)\r\n      })\r\n    } else if (this.searchType == \"Emotion\" && this.emotion) {\r\n      this.searchService.searchByEmotion(this.emotion).subscribe(clips => {\r\n        this.getImages(clips)\r\n        this.router.navigate(['./search', this.searchType, this.emotion])\r\n      })\r\n    }\r\n  }\r\n\r\n  private getImages(clips: VideoClip[]) {\r\n    this.videoClips = clips;\r\n    console.log(this.videoClips);\r\n    for (let i = 0; i < this.videoClips.length; i++) {\r\n      this.getImage(this.videoClips[i]);\r\n    }\r\n  }\r\n\r\n  processVideo() {\r\n    this.searchService.processVideo().subscribe(processing => {\r\n      console.log(processing);\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { VideoClip } from '../models/video-clip';\r\nimport { AddVideoComponent } from 'src/app/add-video/add-video.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  searchVideoClips(searchTerm: string) {\r\n    let url = `api/videos/videoClip/?search=${searchTerm}`;\r\n    return this._http.get<VideoClip[]>(url);\r\n  }\r\n\r\n  addArchiveVideo(videoTag: string = 'AKECARTOONWithEnglishSubtitles') {\r\n    let url = `api/videos/addArchive?videoTag=${videoTag}`;\r\n    return this._http.get(url)\r\n  }\r\n\r\n  processVideo(videoTag: string = 'AKECARTOONWithEnglishSubtitles') {\r\n    let url = `api/videos/processVideo?videoTag=${videoTag}`;\r\n    return this._http.get(url);\r\n  }\r\n\r\n  createGIF(videoId: number, startTime: string, endTime: string, gifTextOverlay: string = '') {\r\n    let url = `api/videos/createGIF?video_id=${videoId}&start_time=${startTime}&end_time=${endTime}&text_overlay=${gifTextOverlay}`;\r\n    return this._http.get<any>(url);\r\n  }\r\n\r\n  searchByPerson(personName: string) {\r\n    let url = `api/videos/byActor?actorName=${personName}`;\r\n    return this._http.get<VideoClip[]>(url);\r\n  }\r\n\r\n  searchByObject(objectName: string) {\r\n    let url = `api/videos/byObject?objectType=${objectName}`;\r\n    return this._http.get<VideoClip[]>(url);\r\n  }\r\n\r\n  searchByEmotion(emotion: string) {\r\n    let url = `api/videos/byEmotion?emotion=${emotion}`;\r\n    return this._http.get<VideoClip[]>(url);\r\n  }\r\n}\r\n ","module.exports = \"<div class=\\\"search-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"search-box\\\">\\n      <input #searchBox id=\\\"search-box\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchTerm\\\">\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".search-container{width:100%}.search-container .row{display:-webkit-box;display:flex;margin-left:0;margin-right:0;padding:20px 0;background:black}.search-container .search-box{margin:0 auto;padding-left:10px}.search-container .search-box input{display:-webkit-box}.search-container #search-box{width:800px;max-width:800px;margin:0 auto;border-radius:20px}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { VideoClip } from 'src/app/search/models/video-clip';\nimport { debounceTime } from 'rxjs/operators';\nimport { fromEvent } from 'rxjs';\nimport { SearchService } from 'src/app/search/services/search.service';\nimport { PictureService } from '../services/picture.service';\n\n@Component({\n  selector: 'app-search-header',\n  templateUrl: './search-header.component.html',\n  styleUrls: ['./search-header.component.scss']\n})\nexport class SearchHeaderComponent implements OnInit {\n\n  @ViewChild('searchBox') searchInput\n\n  searchTerm: string;\n  videoClips: VideoClip[];\n\n  constructor(\n    private searchService: SearchService,\n    private pictureService: PictureService\n    ) { }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      let source = fromEvent(this.searchInput.nativeElement, 'keyup');\n      source.pipe(debounceTime(700)).subscribe(c => {\n        console.log(c);\n        if (this.searchTerm)\n          this.search();\n      }\n      );\n    },1000)\n  }\n\n  private getImage(videoClip: VideoClip) {\n    this.pictureService.getImage(videoClip.video, videoClip.start_minutes, videoClip.start_seconds +'').subscribe(x => {\n      // this.pictureUrl = this.pictureService.getPictureFromBuffer(x);\n      this.createImageFromBlob(x, videoClip);\n\n    })\n  }\n\n  createImageFromBlob(image: Blob, videoClip: VideoClip) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      videoClip.pictureUrl = 'data:image/jpg;base64,' + reader.result;\n      console.log(videoClip.pictureUrl);\n    }, false);\n\n    if (image) {\n      reader.readAsText(image);\n    } \n  }\n\n  search() {\n    // this.searchService.addArchiveVideo(this.searchTerm).subscribe(clips => {\n    //   // this.videoClips = clips;\n    //   console.log(clips);\n    // })\n    this.searchService.searchVideoClips(this.searchTerm).subscribe(clips => {\n      this.videoClips = clips;\n      console.log(this.videoClips);\n      for (let i = 0; i < this.videoClips.length; i++) {\n        this.getImage(this.videoClips[i]);\n      }\n    })\n  }\n\n  processVideo() {\n    this.searchService.processVideo().subscribe(processing => {\n      console.log(processing);\n    })\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        let cookies = document.cookie.split(';');\r\n        let cookie = cookies.find((x: string) => x.indexOf('csrftoken') != -1);\r\n        if (cookie) {\r\n            cookie = cookie.replace('csrftoken=', '').trim();\r\n            const clonedRequest = req.clone({ headers: req.headers.set('X-CSRFToken', cookie) });\r\n            return next.handle(clonedRequest);\r\n        }\r\n\r\n\r\n        // Create simulation of upload event stream\r\n        return next.handle(req);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { VideoClip } from 'src/app/search/models/video-clip';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailService {\n\n  private _videoClip: VideoClip\n\n  constructor() { }\n\n  setVideoClip(videoClip: VideoClip) {\n    this._videoClip = videoClip;\n  }\n\n  getVideoClip() {\n    return this._videoClip;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PictureService {\r\n\r\n  private pictureUrl: string;\r\n  private uploadPictureUrl: string;\r\n  private getPictureUrl: string;\r\n\r\n  constructor(private _http: HttpClient, private _sanitizer: DomSanitizer) {\r\n    this.pictureUrl = `/user/search?name=`;\r\n    this.uploadPictureUrl = `/upload`;\r\n    this.getPictureUrl = `/user/profile-pic?username=`;\r\n  }\r\n\r\n  getImage(videoId: number, startMinutes: number, startSeconds: string) {\r\n    return this._http.get<any>(`api/videos/download?videoId=${videoId}&startMinutes=${startMinutes}&startSeconds=${startSeconds}`, {headers: null, responseType: 'blob' as 'json'});\r\n  }\r\n\r\n  getSpecificTime(videoId: number, minutes: number, seconds: number) {\r\n    return this._http.get<any>(`api/videos/download/frame?videoId=${videoId}&startMinutes=${minutes}&startSeconds=${seconds}`, {headers: null, responseType: 'blob' as 'json'});\r\n  }\r\n\r\n  getPictureFromBuffer(buffer: any) {\r\n    var getImageResult = buffer;\r\n    var binstr = Array.prototype.map.call(getImageResult.data, function (ch) {\r\n      return String.fromCharCode(ch);\r\n    }).join('');\r\n    let data = btoa(binstr);\r\n    let picture = \"data:image/jpg;base64,\" + data;\r\n    return this._sanitizer.bypassSecurityTrustUrl(picture);\r\n  }\r\n\r\n  createImageFromBlob(image: Blob) {\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      let pictureUrl = 'data:image/jpg;base64,' + reader.result;\r\n      console.log(this.pictureUrl);\r\n      return pictureUrl\r\n    }, false);\r\n\r\n    if (image) {\r\n      reader.readAsText(image);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoService {\n\n  videoSegments: any[];\n\n  constructor(private httpClient: HttpClient) { }\n\n  getVideoClip(videoClipId: Number) {\n    // let url = `video/videoClip?videoClipId=${videoClipId}`;\n    let url = `api/videos/videoClip/${videoClipId}`;\n    return this.httpClient.get<any>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}