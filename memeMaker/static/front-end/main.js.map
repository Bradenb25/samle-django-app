{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/search/services/search.service.ts","webpack:///./src/app/shared/services/auth-interceptor.service.ts","webpack:///./src/app/shared/services/picture.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SearchComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n<img *ngIf=\\\"pictureUrl\\\" class=\\\"post-person-img\\\" [src]=\\\"pictureUrl\\\">\\r\\n\"","import { Component } from '@angular/core';\nimport {PictureService} from \"./shared/services/picture.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  pictureUrl;\n  constructor(private pictureService: PictureService) {}\n\n  ngOnInit() {\n    this.pictureService.getImage().subscribe(x => {\n      // this.pictureUrl = this.pictureService.getPictureFromBuffer(x);\n      this.pictureUrl = this.createImageFromBlob(x);\n\n    })\n  }\n\n    createImageFromBlob(image: Blob) {\n      let reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        this.pictureUrl = 'data:image/jpg;base64,' + reader.result;\n        console.log(this.pictureUrl);\n      }, false);\n\n      if (image) {\n        reader.readAsText(image);\n      }\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SearchComponent } from './search/search.component';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthInterceptor } from './shared/services/auth-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<input type=\\\"text\\\" [(ngModel)]=\\\"searchTerm\\\">\\n<button (click)=\\\"search()\\\">Search</button>\"","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from './services/search.service';\nimport { VideoClip } from './models/video-clip';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  searchTerm: string;\n  videoClips: VideoClip[];\n\n  constructor(private searchService: SearchService) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.searchService.searchVideoClips(this.searchTerm).subscribe(clips => {\n      this.videoClips = clips;\n      console.log(this.videoClips);\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { VideoClip } from '../models/video-clip';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(private _http: HttpClient) { }\n\n  searchVideoClips(searchTerm: string) {\n    let url = `api/videos/videoClip/?search=${searchTerm}`;\n    return this._http.get<VideoClip[]>(url);\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        let cookies = document.cookie.split(';');\r\n        let cookie = cookies.find((x: string) => x.indexOf('csrftoken') != -1);\r\n        if (cookie) {\r\n            cookie = cookie.replace('csrftoken=', '').trim();\r\n            const clonedRequest = req.clone({ headers: req.headers.set('X-CSRFToken', cookie) });\r\n            return next.handle(clonedRequest);\r\n        }\r\n\r\n\r\n        // Create simulation of upload event stream\r\n        return next.handle(req);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PictureService {\r\n\r\n  private pictureUrl: string;\r\n  private uploadPictureUrl: string;\r\n  private getPictureUrl: string;\r\n\r\n  constructor(private _http: HttpClient, private _sanitizer: DomSanitizer) {\r\n    this.pictureUrl = `/user/search?name=`;\r\n    this.uploadPictureUrl = `/upload`;\r\n    this.getPictureUrl = `/user/profile-pic?username=`;\r\n  }\r\n\r\n  getImage() {\r\n    return this._http.get<any>('api/videos/download', {headers: null, responseType: 'blob' as 'json'});\r\n  }\r\n\r\n  getPictureFromBuffer(buffer: any) {\r\n    var getImageResult = buffer;\r\n    var binstr = Array.prototype.map.call(getImageResult.data, function (ch) {\r\n      return String.fromCharCode(ch);\r\n    }).join('');\r\n    let data = btoa(binstr);\r\n    let picture = \"data:image/jpg;base64,\" + data;\r\n    return this._sanitizer.bypassSecurityTrustUrl(picture);\r\n  }\r\n\r\n\r\n}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}